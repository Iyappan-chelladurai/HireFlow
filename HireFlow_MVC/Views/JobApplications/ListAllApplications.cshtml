@{
    ViewData["Title"] = "ListAllApplications";
    Layout = "_SystemLayout";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Candidates | ModernTech Recruitment</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/1.13.4/css/dataTables.bootstrap5.min.css" rel="stylesheet">
    <style>
        :root {
            --primary: #2563eb;
            --primary-dark: #1d4ed8;
            --primary-light: #dbeafe;
            --secondary: #7e22ce;
            --dark: #1e293b;
            --light: #f8fafc;
            --gray: #64748b;
            --gray-light: #f1f5f9;
            --success: #10b981;
            --success-light: #d1fae5;
            --warning: #f59e0b;
            --warning-light: #fef3c7;
            --error: #ef4444;
            --error-light: #fee2e2;
            --border-radius: 12px;
            --card-shadow: 0 4px 20px rgba(0, 0, 0, 0.06);
            --card-shadow-hover: 0 10px 40px rgba(0, 0, 0, 0.12);
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            color: var(--dark);
            line-height: 1.6;
            background-color: var(--light);
            overflow-x: hidden;
        }

        .sidebar {
            background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
            color: white;
            height: 100vh;
            position: fixed;
            width: 250px;
            padding-top: 100px;
            left: 0;
            top: 0;
            z-index: 900;
        }

            .sidebar a {
                color: white;
                padding: 15px 25px;
                display: block;
                text-decoration: none;
                transition: var(--transition);
                font-weight: 500;
                display: flex;
                align-items: center;
                gap: 12px;
            }

                .sidebar a:hover, .sidebar a.active {
                    background-color: rgba(255, 255, 255, 0.1);
                    padding-left: 30px;
                }

        .main-content {
            margin-left: 250px;
            padding: 100px 20px 40px;
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }

        .page-title {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--dark);
            position: relative;
            padding-bottom: 10px;
        }

            .page-title:after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 0;
                width: 60px;
                height: 4px;
                background: linear-gradient(90deg, var(--primary), var(--secondary));
                border-radius: 2px;
            }

        .search-filters {
            background-color: white;
            border-radius: var(--border-radius);
            padding: 25px;
            box-shadow: var(--card-shadow);
            margin-bottom: 30px;
            border: 1px solid rgba(0, 0, 0, 0.05);
        }

        .candidate-card {
            background-color: white;
            border-radius: var(--border-radius);
            padding: 25px;
            box-shadow: var(--card-shadow);
            transition: var(--transition);
            border: 1px solid rgba(0, 0, 0, 0.05);
            height: 100%;
            display: flex;
            flex-direction: column;
            position: relative;
            overflow: hidden;
        }

            .candidate-card:hover {
                transform: translateY(-8px);
                box-shadow: var(--card-shadow-hover);
            }

            .candidate-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 4px;
                background: linear-gradient(90deg, var(--primary), var(--secondary));
            }

        .candidate-status {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-new {
            background-color: var(--primary-light);
            color: #1e40af;
        }

        .status-screening {
            background-color: var(--primary-light);
            color: #1e40af;
        }

        .status-interview {
            background-color: var(--warning-light);
            color: #92400e;
        }

        .status-offered {
            background-color: var(--success-light);
            color: #065f46;
        }

        .status-hired {
            background-color: var(--success-light);
            color: #065f46;
        }

        .status-rejected {
            background-color: var(--error-light);
            color: #b91c1c;
        }

        .match-score {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: white;
            font-size: 0.9rem;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .score-high {
            background: linear-gradient(135deg, var(--success), #059669);
        }

        .score-medium {
            background: linear-gradient(135deg, var(--warning), #d97706);
        }

        .score-low {
            background: linear-gradient(135deg, var(--error), #dc2626);
        }

        .candidate-image {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            object-fit: cover;
            margin: 0 auto 15px;
            display: block;
            border: 3px solid #e0f2fe;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .candidate-name {
            font-size: 1.2rem;
            font-weight: 700;
            margin-bottom: 5px;
            color: var(--dark);
        }

        .candidate-position {
            font-size: 0.9rem;
            color: var(--gray);
            margin-bottom: 15px;
        }

        .skill-badge {
            padding: 6px 12px;
            background: linear-gradient(135deg, var(--primary-light), #e0f2fe);
            color: var(--primary-dark);
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
            transition: var(--transition);
        }

            .skill-badge:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(37, 99, 235, 0.2);
            }

        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.7);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 2000;
            padding: 20px;
            opacity: 0;
            visibility: hidden;
            transition: var(--transition);
        }

            .modal-overlay.active {
                opacity: 1;
                visibility: visible;
            }

        .modal {
            background-color: white;
            border-radius: var(--border-radius);
            width: 100%;
            max-width: 900px;
            max-height: 90vh;
            overflow-y: auto;
            padding: 40px;
            position: relative;
            transform: translateY(50px);
            transition: transform 0.5s;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
        }

        .modal-overlay.active .modal {
            transform: translateY(0);
        }

        .loading-spinner {
            display: none;
            text-align: center;
            padding: 40px;
        }

        .spinner {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-left-color: var(--primary);
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @@keyframes spin {
            to

        {
            transform: rotate(360deg);
        }

        }

        .view-toggle-btn {
            border: none;
            border-radius: 8px;
            padding: 10px 20px;
            font-weight: 600;
            transition: var(--transition);
        }

            .view-toggle-btn.active {
                background: linear-gradient(135deg, var(--primary), var(--secondary));
                color: white;
                box-shadow: 0 4px 15px rgba(37, 99, 235, 0.3);
            }

            .view-toggle-btn:not(.active) {
                background-color: white;
                color: var(--gray);
            }

                .view-toggle-btn:not(.active):hover {
                    background-color: var(--gray-light);
                    color: var(--dark);
                }

        .search-container {
            position: relative;
            width: 300px;
        }

            .search-container input {
                padding-left: 45px;
                border-radius: 10px;
                border: 1px solid #e2e8f0;
                transition: var(--transition);
            }

                .search-container input:focus {
                    border-color: var(--primary);
                    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
                }

            .search-container i {
                position: absolute;
                left: 15px;
                top: 50%;
                transform: translateY(-50%);
                color: var(--gray);
                z-index: 10;
            }

        .candidate-actions {
            display: flex;
            flex-direction: column;
            gap: 12px;
            margin-top: auto;
            padding-top: 20px;
            border-top: 1px solid rgba(0, 0, 0, 0.08);
        }

            .candidate-actions .btn {
                border: none;
                border-radius: 10px;
                padding: 14px 20px;
                font-weight: 600;
                font-size: 0.95rem;
                transition: var(--transition);
                position: relative;
                overflow: hidden;
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 8px;
            }

                .candidate-actions .btn::before {
                    content: '';
                    position: absolute;
                    top: 0;
                    left: -100%;
                    width: 100%;
                    height: 100%;
                    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
                    transition: left 0.5s ease;
                }

                .candidate-actions .btn:hover::before {
                    left: 100%;
                }

            /* View Profile Button Styles */
            .candidate-actions .btn-outline-primary {
                background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
                color: var(--primary);
                border: 2px solid var(--primary);
                box-shadow: 0 2px 8px rgba(37, 99, 235, 0.1);
            }

                .candidate-actions .btn-outline-primary:hover {
                    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
                    color: white;
                    border-color: var(--primary);
                    transform: translateY(-2px);
                    box-shadow: 0 8px 25px rgba(37, 99, 235, 0.25);
                }

                .candidate-actions .btn-outline-primary:active {
                    transform: translateY(0);
                    box-shadow: 0 4px 12px rgba(37, 99, 235, 0.2);
                }

            /* Primary Action Button Styles */
            .candidate-actions .btn-primary {
                background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
                color: white;
                box-shadow: 0 4px 15px rgba(37, 99, 235, 0.3);
                position: relative;
            }

                .candidate-actions .btn-primary:hover {
                    background: linear-gradient(135deg, var(--primary-dark) 0%, #1e40af 100%);
                    transform: translateY(-2px);
                    box-shadow: 0 8px 30px rgba(37, 99, 235, 0.4);
                }

                .candidate-actions .btn-primary:active {
                    transform: translateY(0);
                    box-shadow: 0 4px 15px rgba(37, 99, 235, 0.3);
                }

                /* Status-based Button Variations */
                .candidate-actions .btn-primary[onclick*="New"],
                .candidate-actions .btn-primary[onclick*="Review"] {
                    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
                }

                .candidate-actions .btn-primary[onclick*="Screening"],
                .candidate-actions .btn-primary[onclick*="Shortlist"] {
                    background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
                    box-shadow: 0 4px 15px rgba(139, 92, 246, 0.3);
                }

                    .candidate-actions .btn-primary[onclick*="Screening"]:hover,
                    .candidate-actions .btn-primary[onclick*="Shortlist"]:hover {
                        background: linear-gradient(135deg, #7c3aed 0%, #6d28d9 100%);
                        box-shadow: 0 8px 30px rgba(139, 92, 246, 0.4);
                    }

                .candidate-actions .btn-primary[onclick*="Interview"],
                .candidate-actions .btn-primary[onclick*="Schedule"] {
                    background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
                    box-shadow: 0 4px 15px rgba(245, 158, 11, 0.3);
                }

                    .candidate-actions .btn-primary[onclick*="Interview"]:hover,
                    .candidate-actions .btn-primary[onclick*="Schedule"]:hover {
                        background: linear-gradient(135deg, #d97706 0%, #b45309 100%);
                        box-shadow: 0 8px 30px rgba(245, 158, 11, 0.4);
                    }

                .candidate-actions .btn-primary[onclick*="Offered"],
                .candidate-actions .btn-primary[onclick*="Manage"] {
                    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
                    box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
                }

                    .candidate-actions .btn-primary[onclick*="Offered"]:hover,
                    .candidate-actions .btn-primary[onclick*="Manage"]:hover {
                        background: linear-gradient(135deg, #059669 0%, #047857 100%);
                        box-shadow: 0 8px 30px rgba(16, 185, 129, 0.4);
                    }

                .candidate-actions .btn-primary[onclick*="Hired"],
                .candidate-actions .btn-primary[onclick*="Onboard"] {
                    background: linear-gradient(135deg, #047857 0%, #065f46 100%);
                    box-shadow: 0 4px 15px rgba(5, 150, 105, 0.3);
                }

                .candidate-actions .btn-primary[onclick*="Rejected"],
                .candidate-actions .btn-primary[onclick*="Reconsider"] {
                    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
                    box-shadow: 0 4px 15px rgba(239, 68, 68, 0.3);
                }

                    .candidate-actions .btn-primary[onclick*="Rejected"]:hover,
                    .candidate-actions .btn-primary[onclick*="Reconsider"]:hover {
                        background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);
                        box-shadow: 0 8px 30px rgba(239, 68, 68, 0.4);
                    }

            /* Button Icons */
            .candidate-actions .btn i {
                font-size: 0.9rem;
                transition: transform 0.3s ease;
            }

            .candidate-actions .btn:hover i {
                transform: translateX(2px);
            }

            .candidate-actions .btn-outline-primary i {
                color: var(--primary);
            }

            .candidate-actions .btn-outline-primary:hover i {
                color: white;
                transform: translateX(3px);
            }

        .candidate-details {
            font-size: 0.9rem;
            color: var(--gray);
        }

            .candidate-details strong {
                color: var(--dark);
            }

        .profile-section {
            margin-bottom: 30px;
        }

        .profile-section-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--dark);
            padding-bottom: 10px;
            border-bottom: 2px solid var(--gray-light);
        }

        .candidate-profile-header {
            display: flex;
            align-items: center;
            gap: 25px;
            margin-bottom: 30px;
        }

        .candidate-profile-image {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid var(--primary-light);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        }

        .candidate-profile-info {
            flex: 1;
        }

        .candidate-profile-name {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--dark);
            margin-bottom: 5px;
        }

        .candidate-profile-position {
            font-size: 1.1rem;
            color: var(--gray);
            margin-bottom: 15px;
        }

        .dataTables_wrapper {
            background: white;
            border-radius: var(--border-radius);
            padding: 20px;
            box-shadow: var(--card-shadow);
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: var(--gray);
        }

            .empty-state i {
                font-size: 4rem;
                margin-bottom: 20px;
                color: #cbd5e1;
            }

            .empty-state h3 {
                font-size: 1.5rem;
                margin-bottom: 10px;
                color: var(--dark);
            }

        @@media (max-width: 768px) {
            .sidebar

        {
            width: 70px;
            padding-top: 90px;
        }

        .sidebar a span {
            display: none;
        }

        .main-content {
            margin-left: 70px;
            padding: 90px 15px 30px;
        }

        .page-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 15px;
        }

        .search-container {
            width: 100%;
        }

        .candidate-profile-header {
            flex-direction: column;
            text-align: center;
            gap: 15px;
        }

        }

        @@media (max-width: 576px) {
            .sidebar

        {
            display: none;
        }

        .main-content {
            margin-left: 0;
        }

        .candidate-actions {
            gap: 10px;
        }

            .candidate-actions .btn {
                padding: 12px 16px;
                font-size: 0.9rem;
            }

        }

        /* Focus States for Accessibility */
        .candidate-actions .btn:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.3);
        }

        .candidate-actions .btn-outline-primary:focus {
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.3);
        }

        .candidate-actions .btn-primary:focus {
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.5);
        }
    </style>
</head>
<body>

    <!-- Main Content -->
    <div class="main-content">
        <div class="container">
            <div class="page-header">
                <h2 class="page-title">Candidates</h2>
                <div class="search-container">
                    <i class="fas fa-search"></i>
                    <input type="text" class="form-control" id="search-input" placeholder="Search candidates...">
                </div>
            </div>

            <!-- View Toggle -->
            <div class="d-inline-flex bg-light rounded p-1 mb-4">
                <button class="btn btn-sm view-toggle-btn active" id="grid-view-btn">
                    <i class="fas fa-th-large"></i> Grid View
                </button>
                <button class="btn btn-sm view-toggle-btn" id="table-view-btn">
                    <i class="fas fa-table"></i> Table View
                </button>
            </div>

            <!-- Loading Spinner -->
            <div class="loading-spinner" id="loading-spinner">
                <div class="spinner"></div>
                <p>Loading candidates...</p>
            </div>

            <!-- Candidate Grid View -->
            <div class="row g-4" id="candidate-grid">
                <!-- Candidate cards will be dynamically inserted here -->
            </div>

            <!-- Candidate Table View -->
            <div id="candidate-table" style="display: none;">
                <table class="table table-striped table-hover" id="candidates-datatable">
                    <thead>
                        <tr>
                            <th>Candidate</th>
                            <th>Status</th>
                            <th>Job Title</th>
                            <th>Education</th>
                            <th>Applied</th>
                            <th>Expected Salary</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- DataTables will populate this -->
                    </tbody>
                </table>
            </div>

            <!-- Empty State -->
            <div class="empty-state" id="empty-state" style="display: none;">
                <div class="text-muted mb-3">
                    <i class="fas fa-user-friends"></i>
                </div>
                <h3>No candidates found</h3>
                <p class="text-muted">Try adjusting your search or filter criteria</p>
            </div>
        </div>
    </div>

    <!-- Candidate Profile Modal -->
    <div class="modal-overlay" id="candidate-profile-modal">
        <div class="modal">
            <button type="button" class="btn-close position-absolute top-0 end-0 m-3" aria-label="Close"></button>
            <div class="candidate-profile-header mb-4" id="modal-profile-header">
                <!-- Profile header will be dynamically inserted here -->
            </div>

            <div class="profile-section mb-4">
                <h3 class="profile-section-title">Professional Summary</h3>
                <div class="profile-section-content" id="modal-summary">
                    <!-- Summary will be dynamically inserted here -->
                </div>
            </div>

            <div class="profile-section mb-4">
                <h3 class="profile-section-title">Skills</h3>
                <div class="profile-section-content">
                    <div class="d-flex flex-wrap gap-2" id="modal-skills">
                        <!-- Skills will be dynamically inserted here -->
                    </div>
                </div>
            </div>

            <div class="profile-section mb-4">
                <h3 class="profile-section-title">Application Details</h3>
                <div class="profile-section-content" id="modal-application-details">
                    <!-- Application details will be dynamically inserted here -->
                </div>
            </div>

            <div class="profile-section">
                <h3 class="profile-section-title">Interview Feedback</h3>
                <div class="profile-section-content" id="modal-interview-feedback">
                    <!-- Interview feedback will be dynamically inserted here -->
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            // Get job ID from URL
            const urlParams = new URLSearchParams(window.location.search);
            const jobId = urlParams.get('JobId') || '';

            // API configuration
            const API_BASE_URL = `https://localhost:7180/api/JobApplications/GetCandidatesByJob/${jobId}`;

            // State management
            let currentView = 'grid';
            let dataTable = null;
            let allCandidates = [];

            // Initialize the page
            loadCandidates();

            // Event handlers
            $('#search-input').on('keyup', function(e) {
                if (e.key === 'Enter') handleSearch();
            });

            $('#grid-view-btn').click(function() {
                switchView('grid');
            });

            $('#table-view-btn').click(function() {
                switchView('table');
            });

            $('.btn-close').click(closeModal);
            $('#candidate-profile-modal').click(function(e) {
                if (e.target === this) closeModal();
            });

            function handleSearch() {
                const searchTerm = $('#search-input').val().trim();
                if (currentView === 'grid') {
                    filterGridCandidates();
                } else {
                    if (dataTable) {
                        dataTable.search(searchTerm).draw();
                    }
                }
            }

            function switchView(view) {
                currentView = view;

                if (view === 'grid') {
                    $('#candidate-grid').show();
                    $('#candidate-table').hide();
                    $('#grid-view-btn').addClass('active');
                    $('#table-view-btn').removeClass('active');

                    if (dataTable) {
                        dataTable.destroy();
                        dataTable = null;
                    }
                } else {
                    $('#candidate-grid').hide();
                    $('#candidate-table').show();
                    $('#table-view-btn').addClass('active');
                    $('#grid-view-btn').removeClass('active');

                    initializeDataTable();
                }
            }

            function loadCandidates() {
                showLoading();

                $.ajax({
                    url: API_BASE_URL,
                    method: 'GET',
                    success: function(data) {
                        allCandidates = Array.isArray(data) ? data : [];
                        hideLoading();
                        renderGridCandidates(allCandidates);

                        if (currentView === 'table') {
                            initializeDataTable();
                        }
                    },
                    error: function(xhr, status, error) {
                        hideLoading();
                        console.error('Failed to load candidates:', error);
                        showEmptyState();
                    }
                });
            }

            function renderGridCandidates(candidates) {
                const $grid = $('#candidate-grid');
                $grid.empty();

                if (candidates.length === 0) {
                    showEmptyState();
                    return;
                }

                candidates.forEach(candidate => {
                    const scoreClass = getScoreClass(candidate.matchScore);
                    const statusClass = `status-${candidate.applicationStatus?.toLowerCase() || 'new'}`;

                    const candidateCard = `
                        <div class="col-md-6 col-lg-4">
                            <div class="candidate-card">
                                <div class="d-flex justify-content-between align-items-start mb-3">
                                    <span class="candidate-status ${statusClass}">${candidate.applicationStatus || 'New'}</span>
                                    <div class="match-score ${scoreClass}">${candidate.matchScore}%</div>
                                </div>
                                <img src="https://ui-avatars.com/api/?name=${encodeURIComponent(candidate.candidateName || 'Candidate')}&background=2563eb&color=fff"
                                     alt="${candidate.candidateName}" class="candidate-image">
                                <h3 class="candidate-name text-center">${candidate.candidateName || 'Unknown Candidate'}</h3>
                                <p class="candidate-position text-center">${candidate.jobTitle || 'No Title'}</p>
                                <div class="candidate-details mb-3">
                                    <div class="mb-1"><strong>Education:</strong> ${candidate.educationLevel || 'Not specified'}</div>
                                    <div class="mb-1"><strong>Applied:</strong> ${formatDate(candidate.appliedOn) || 'N/A'}</div>
                                    <div><strong>Expected Salary:</strong> ${formatSalary(candidate.expectedSalary)}</div>
                                </div>
                                <div class="candidate-skills mb-3">
                                    <div class="skills-list d-flex flex-wrap gap-1">
                                        ${renderSkills(candidate.skills)}
                                    </div>
                                </div>
                                <div class="candidate-actions mt-auto">
                                    <button class="btn btn-outline-primary w-100 mb-2 view-profile-btn"
                                            data-candidate='${JSON.stringify(candidate).replace(/'/g, "&#39;")}'>
                                        <i class="fas fa-user-circle"></i> View Profile
                                    </button>
                                    <button class="btn btn-primary w-100"
                                            onclick="handleCandidateAction('${candidate.applicationId}')">
                                        <i class="fas fa-${getActionIcon(candidate.applicationStatus)}"></i> ${getActionButtonText(candidate.applicationStatus)}
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;

                    $grid.append(candidateCard);
                });

                // Re-bind event listeners for the new cards
                $('.view-profile-btn').click(function() {
                    const candidateData = JSON.parse($(this).data('candidate').replace(/&#39;/g, "'"));
                    openCandidateModal(candidateData);
                });
            }

            function initializeDataTable() {
                if (dataTable) {
                    dataTable.destroy();
                }

                dataTable = $('#candidates-datatable').DataTable({
                    data: allCandidates,
                    columns: [
                        {
                            data: null,
                            render: function(data, type, row) {
                                return `
                                    <div class="d-flex align-items-center">
                                        <img src="https://ui-avatars.com/api/?name=${encodeURIComponent(row.candidateName || 'Candidate')}&background=2563eb&color=fff"
                                             alt="${row.candidateName}" style="width:40px;height:40px;border-radius:50%;">
                                        <div class="ms-3">
                                            <div class="fw-semibold">${row.candidateName || 'Unknown Candidate'}</div>
                                            <small class="text-muted">${row.candidateEmail || ''}</small>
                                        </div>
                                    </div>
                                `;
                            }
                        },
                        {
                            data: 'applicationStatus',
                            render: function(data) {
                                const statusClass = `status-${(data || 'new').toLowerCase()}`;
                                return `<span class="candidate-status ${statusClass}">${data || 'New'}</span>`;
                            }
                        },
                        { data: 'jobTitle' },
                        { data: 'educationLevel' },
                        {
                            data: 'appliedOn',
                            render: function(data) {
                                return formatDate(data) || 'N/A';
                            }
                        },
                        {
                            data: 'expectedSalary',
                            render: function(data) {
                                return formatSalary(data);
                            }
                        },
                        {
                            data: null,
                            render: function(data, type, row) {
                                return `
                                    <button class="btn btn-sm btn-outline-primary view-profile-btn"
                                            data-candidate='${JSON.stringify(row).replace(/'/g, "&#39;")}'>
                                        <i class="fas fa-user-circle"></i> View Profile
                                    </button>
                                `;
                            }
                        }
                    ],
                    responsive: true,
                    language: {
                        emptyTable: "No candidates found"
                    }
                });

                // Bind event listeners for DataTable rows
                $('#candidates-datatable tbody').on('click', '.view-profile-btn', function() {
                    const candidateData = JSON.parse($(this).data('candidate').replace(/&#39;/g, "'"));
                    openCandidateModal(candidateData);
                });
            }

            function filterGridCandidates() {
                const searchTerm = $('#search-input').val().toLowerCase();
                const filteredCandidates = allCandidates.filter(candidate => {
                    const matchesSearch = !searchTerm ||
                        (candidate.candidateName && candidate.candidateName.toLowerCase().includes(searchTerm)) ||
                        (candidate.jobTitle && candidate.jobTitle.toLowerCase().includes(searchTerm)) ||
                        (candidate.skills && candidate.skills.toLowerCase().includes(searchTerm));

                    return matchesSearch;
                });

                renderGridCandidates(filteredCandidates);
            }

            function renderSkills(skills) {
                if (!skills) return '<span class="text-muted">No skills listed</span>';

                const skillsArray = typeof skills === 'string' ? skills.split(',').slice(0, 4) : skills.slice(0, 4);
                return skillsArray.map(skill =>
                    `<span class="skill-badge">${skill.trim()}</span>`
                ).join('');
            }

            function getScoreClass(score) {
                if (score >= 80) return 'score-high';
                if (score >= 50) return 'score-medium';
                return 'score-low';
            }

            function getActionButtonText(status) {
                const actionMap = {
                    New: 'Review',
                    Screening: 'Shortlist',
                    Interview: 'Schedule',
                    Offered: 'Manage',
                    Hired: 'Onboard',
                    Rejected: 'Reconsider'
                };
                return actionMap[status] || 'Review';
            }

            function getActionIcon(status) {
                const iconMap = {
                    'New': 'search',
                    'Review': 'search',
                    'Screening': 'filter',
                    'Shortlist': 'list',
                    'Interview': 'calendar-alt',
                    'Schedule': 'calendar-plus',
                    'Offered': 'handshake',
                    'Manage': 'cog',
                    'Hired': 'user-check',
                    'Onboard': 'user-plus',
                    'Rejected': 'undo',
                    'Reconsider': 'redo'
                };
                return iconMap[status] || 'search';
            }

            function formatDate(dateString) {
                if (!dateString) return null;
                try {
                    const date = new Date(dateString);
                    return date.toLocaleDateString();
                } catch (e) {
                    return 'Invalid Date';
                }
            }

            function formatSalary(salary) {
                if (!salary) return 'Not specified';
                return new Intl.NumberFormat('en-US', {
                    style: 'currency',
                    currency: 'USD',
                    minimumFractionDigits: 0
                }).format(salary);
            }

            function openCandidateModal(candidate) {
                const matchScore = candidate.matchScore || calculateMatchScore(candidate);
                const scoreClass = getScoreClass(matchScore);

                $('#modal-profile-header').html(`
                    <div class="candidate-profile-header">
                        <img src="https://ui-avatars.com/api/?name=${encodeURIComponent(candidate.candidateName || 'Candidate')}&background=2563eb&color=fff&size=120"
                             class="candidate-profile-image">
                        <div class="candidate-profile-info">
                            <h2 class="candidate-profile-name">${candidate.candidateName || 'Unknown Candidate'}</h2>
                            <p class="candidate-profile-position">${candidate.jobTitle || 'No Title'}</p>
                            <div class="match-score ${scoreClass}">${matchScore}% Match</div>
                        </div>
                    </div>
                `);

                $('#modal-summary').html(`
                    <p>${candidate.candidateName || 'The candidate'} applied for the ${candidate.jobTitle || 'position'} on ${formatDate(candidate.appliedOn) || 'an unknown date'}.</p>
                    <p class="mb-0"><strong>Cover Letter:</strong> ${candidate.coverLetter || 'No cover letter provided.'}</p>
                `);

                $('#modal-skills').html(renderSkills(candidate.skills) || '<span class="text-muted">No skills listed</span>');

                $('#modal-application-details').html(`
                    <div class="row">
                        <div class="col-md-6">
                            <p><strong>Status:</strong> ${candidate.applicationStatus || 'New'}</p>
                            <p><strong>Applied:</strong> ${formatDate(candidate.appliedOn) || 'N/A'}</p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Education:</strong> ${candidate.educationLevel || 'Not specified'}</p>
                            <p><strong>Expected Salary:</strong> ${formatSalary(candidate.expectedSalary)}</p>
                        </div>
                    </div>
                `);

                $('#modal-interview-feedback').html(`
                    <p class="text-muted">${candidate.interviewFeedback || 'No interview feedback available yet.'}</p>
                `);

                $('#candidate-profile-modal').addClass('active');
                $('body').css('overflow', 'hidden');
            }

            function closeModal() {
                $('#candidate-profile-modal').removeClass('active');
                $('body').css('overflow', 'auto');
            }

            function showLoading() {
                $('#loading-spinner').show();
                $('#candidate-grid, #candidate-table, #empty-state').hide();
            }

            function hideLoading() {
                $('#loading-spinner').hide();
                if (currentView === 'grid') {
                    $('#candidate-grid').show();
                } else {
                    $('#candidate-table').show();
                }
            }

            function showEmptyState() {
                $('#empty-state').show();
                $('#candidate-grid, #candidate-table').hide();
            }

            function calculateMatchScore(candidate) {
                let score = 70;
                if (candidate.educationLevel) {
                    if (candidate.educationLevel.includes('Master') || candidate.educationLevel.includes('MBA')) score += 10;
                    else if (candidate.educationLevel.includes('Bachelor')) score += 5;
                }
                if (candidate.applicationStatus === 'Interview' || candidate.applicationStatus === 'Offered') score += 10;
                return Math.min(100, Math.max(0, score));
            }

            // Global function for candidate actions
            window.handleCandidateAction = function(applicationId) {
                alert(`Action triggered for application ID: ${applicationId}`);
                // Implement your specific action logic here
            };
        });
    </script>
</body>
</html>